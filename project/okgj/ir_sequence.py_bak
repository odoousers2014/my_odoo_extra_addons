# -*- coding: utf-8 -*-
from openerp.osv import fields, osv
import datetime
import random
import redis
import logging
import openerp.tools.config as config

_logger = logging.getLogger(__name__)

try:
    redis_seq_pool = redis.ConnectionPool(host=config.get('redis_interface', '127.0.0.1'), port=int(config.get('redis_port', 6379)))
    #redis_seq_pool = redis.ConnectionPool(host=config.get('redis_interface', '127.0.0.1'), port=int(config.get('redis_port', 6379)), db=1)
    r = redis.StrictRedis(connection_pool=redis_seq_pool)
    pipe = r.pipeline()
except:
    _logger.exception('Can not connect to redis sequence server!')

class okgj_ir_sequence(osv.osv):
    _inherit = 'ir.sequence'

    """
    方案1 :年月日＋时分秒毫秒＋随机数
    %y 两位数的年份表示（00-99）
    %Y 四位数的年份表示（000-9999）
    %m 月份（01-12）
    %d 月内中的一天（0-31）
    %H 24小时制小时数（0-23）
    %I 12小时制小时数（01-12） 
    %M 分钟数（00=59）
    %S 秒（00-59）
    %f 毫秒
    方案2 :通过redis 自增解决性能问题，按每日流水号
    """
    def get(self, cr, uid, code, context=None):
        
        """ Draw an interpolated string using the specified sequence.
        
        The sequence to use is specified by its code. This method is
        deprecated.
        """
        if context is None:
            context = {}
        code_ids = self.search(cr, uid, [('code', '=', code)], context=context)
        if code_ids:
            code_data = self.read(cr, uid, code_ids[0], ['name', 'prefix', 'suffix'], context=context)
            date_str = datetime.datetime.today().strftime('%Y%m%d')
            redis_key = 'ir_sequence:' + code_data['name'] + ':' + date_str
            okgj_seq = date_str + '-' + str(pipe.incr(redis_key).get(redis_key).execute()[0])
            pipe.reset()
            if code_data['prefix']:
                okgj_seq = code_data['prefix'] + okgj_seq 
            if code_data['suffix']:
                okgj_seq += code_data['suffix']
        else:
            okgj_seq = datetime.datetime.now().strftime('%y%m%d-%H%M%S-%f') + str(random.randint(10000, 99999))
        return okgj_seq
  
